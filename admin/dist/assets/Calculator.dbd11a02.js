import{_ as f,a as V,r as s,o as b,c as v,e,w as o,n as y,F as R,b as d,i as m}from"./index.44e5e36f.js";const M={data(){return{minRange:0,maxRange:0,thisPrice:107,percentMaxChange:0,percentMinChange:0,chart:null,options:{animationEnabled:!0,theme:"dark1",exportEnabled:!0,title:{text:""},subtitles:[{text:"Weekly Average"}],axisX:{interval:1},axisY:{prefix:"$",yValueFormatString:"####.####",title:"Price in USD",stripLines:[{value:2600,label:"empty",color:"#FF0000"},{value:2700,label:"empty",color:"#00FF00"}]},toolTip:{content:"Date: {x}<br /><strong>Price:</strong><br />Open: {y[0]}, Close: {y[3]}<br />High: {y[1]}, Low: {y[2]}"},data:[{type:"candlestick",xValueFormatString:"DD MMM YYYY",dataPoints:[]}]},styleOptions:{width:"100%",height:"360px"}}},methods:{calculate(){this.percentMaxChange=(this.maxRange-this.thisPrice)/this.thisPrice*100,this.percentMinChange=(this.thisPrice-this.minRange)/this.thisPrice*100,this.chart.data[0].axisY.stripLines[0].set("value",this.minRange),this.chart.data[0].axisY.stripLines[0].set("label",this.percentMinChange),this.chart.data[0].axisY.stripLines[1].set("value",this.maxRange),this.chart.data[0].axisY.stripLines[1].set("label",this.percentMaxChange),this.chart.render(),console.log(this.percentMaxChange),console.log(this.percentMinChange)},chartInstance(i){this.chart=i,this.fetchRows()},fetchRows(){let i=this;this.loading=!0,V.request({method:"get",url:"/api/liquidity-pools/chart-1h/"+241,params:this.serverParams,paramsSerializer:t=>qs.stringify(t)}).then(t=>{t.data.candles.forEach(n=>{this.options.data[0].dataPoints.push({x:new Date(n.time),y:[n.open,n.high,n.low,n.close]})}),this.chart.data[0].axisY.stripLines[0].set("value",t.data.pool_min),this.chart.data[0].axisY.stripLines[0].set("label",t.data.pool_min),this.chart.data[0].axisY.stripLines[1].set("value",t.data.pool_max),this.chart.data[0].axisY.stripLines[1].set("label",t.data.pool_max),this.chart.title.set("text",t.data.symbol),this.minRange=t.data.pool_min,this.maxRange=t.data.pool_max,this.chart.render(),i.loading=!1}).catch(t=>{console.log(t),i.loading=!1})}},created(){}},P=m("Title"),Y={class:"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 items-end"},L=m(" \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044C "),k={class:"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 items-end"};function w(i,t,n,F,a,c){const p=s("VaCardTitle"),r=s("VaInput"),u=s("va-button"),g=s("va-form"),h=s("VaBadge"),x=s("VaCardContent"),_=s("VaCard"),C=s("CanvasJSChart");return b(),v(R,null,[e(_,null,{default:o(()=>[e(p,null,{default:o(()=>[P]),_:1}),e(x,null,{default:o(()=>[d("div",Y,[e(g,{class:"flex flex-col gap-6",ref:"formRef"},{default:o(()=>[e(r,{modelValue:a.minRange,"onUpdate:modelValue":t[0]||(t[0]=l=>a.minRange=l),class:"mb-6",label:"Min",mask:"numeral",placeholder:""},null,8,["modelValue"]),e(r,{modelValue:a.maxRange,"onUpdate:modelValue":t[1]||(t[1]=l=>a.maxRange=l),class:"mb-6",label:"Max",mask:"numeral",placeholder:""},null,8,["modelValue"]),e(r,{modelValue:a.thisPrice,"onUpdate:modelValue":t[2]||(t[2]=l=>a.thisPrice=l),class:"mb-6",label:"Price",mask:"numeral",placeholder:""},null,8,["modelValue"]),e(u,{onClick:t[3]||(t[3]=l=>c.calculate())},{default:o(()=>[L]),_:1})]),_:1},512)]),d("div",k,[e(h,{text:a.percentMinChange,color:"danger",class:"mr-2"},null,8,["text"]),e(h,{text:a.percentMaxChange,color:"success",class:"mr-2"},null,8,["text"])])]),_:1})]),_:1}),e(C,{options:a.options,style:y(a.styleOptions),onChartRef:c.chartInstance},null,8,["options","style","onChartRef"])],64)}var B=f(M,[["render",w]]);export{B as default};
