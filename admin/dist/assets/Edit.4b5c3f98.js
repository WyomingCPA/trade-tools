import{_ as v,a as c,r,o as P,c as _,e as i,w as l,n as C,F as b,b as m,i as f}from"./index.06ce08cf.js";const y={name:"group-create",components:{},data(){return{value:[10,25],loading:!1,minRange:0,maxRange:0,currentPrice:0,percentMaxChange:0,percentMinChange:0,chart:null,options:{animationEnabled:!0,theme:"dark1",exportEnabled:!0,title:{text:""},subtitles:[{text:"Weekly Average"}],axisX:{interval:1},axisY:{prefix:"$",yValueFormatString:"####.####",title:"Price in USD",stripLines:[{value:2600,label:"empty",color:"#FF0000"},{value:2700,label:"empty",color:"#00FF00"},{value:0,label:"empty",color:"#0800ff"}]},toolTip:{content:"Date: {x}<br /><strong>Price:</strong><br />Open: {y[0]}, Close: {y[3]}<br />High: {y[1]}, Low: {y[2]}"},data:[{type:"candlestick",xValueFormatString:"DD MMM YYYY",dataPoints:[]}]},styleOptions:{width:"100%",height:"360px"}}},computed:{minSlide:function(){},maxSlide:function(){let e=parseInt(this.maxRange)+500;return this.calculateTest(),e}},methods:{inputChange(){this.value=[this.minRange,this.maxRange]},sliderChange(){this.minRange=this.value[0],this.maxRange=this.value[1],console.log(this.value)},processTrackLabel(e,t){return t===0?`min ${e}$`:`max ${e}$`},calculateTest(){this.percentMaxChange=(this.maxRange-this.currentPrice)/this.currentPrice*100,this.percentMinChange=(this.currentPrice-this.minRange)/this.currentPrice*100},calculate(e){e.percentMaxChange=(e.maxRange-e.currentPrice)/e.currentPrice*100,e.percentMinChange=(e.currentPrice-e.minRange)/e.currentPrice*100,this.chart.data[0].axisY.stripLines[0].set("value",e.minRange),this.chart.data[0].axisY.stripLines[0].set("label",e.percentMinChange),this.chart.data[0].axisY.stripLines[1].set("value",e.maxRange),this.chart.data[0].axisY.stripLines[1].set("label",e.percentMaxChange),this.chart.data[0].axisY.stripLines[2].set("value",e.currentPrice),this.chart.data[0].axisY.stripLines[2].set("label",e.currentPrice),this.chart.render(),console.log(e.percentMaxChange),console.log(e.percentMinChange)},chartInstance(e){this.chart=e,this.fetchRows()},fetchRows(){let e=this;this.loading=!0,c.request({method:"get",url:"/api/liquidity-pools/chart-1h/"+this.$route.params.id,params:this.serverParams,paramsSerializer:t=>qs.stringify(t)}).then(t=>{t.data.candles.forEach(a=>{this.options.data[0].dataPoints.push({x:new Date(a.time),y:[a.open,a.high,a.low,a.close]})}),this.chart.data[0].axisY.stripLines[0].set("value",t.data.pool_min),this.chart.data[0].axisY.stripLines[0].set("label",t.data.pool_min),this.chart.data[0].axisY.stripLines[1].set("value",t.data.pool_max),this.chart.data[0].axisY.stripLines[1].set("label",t.data.pool_max),this.chart.data[0].axisY.stripLines[2].set("value",e.currentPrice),this.chart.data[0].axisY.stripLines[2].set("label",e.currentPrice),this.chart.title.set("text",t.data.symbol),this.minRange=t.data.pool_min,this.maxRange=t.data.pool_max,this.value=[this.minRange,this.maxRange],console.log(this.value),e.percentMaxChange=(e.maxRange-e.currentPrice)/e.currentPrice*100,e.percentMinChange=(e.currentPrice-e.minRange)/e.currentPrice*100,this.chart.render(),e.loading=!1}).catch(t=>{console.log(t),e.loading=!1})},getData(){let e=this;c.get("/api/cryptocurrency/edit/"+this.$route.params.id).then(function(t){e.minRange=t.data.model.min,e.maxRange=t.data.model.max,e.currentPrice=t.data.last_candle,console.log(t.data.model.min)}).catch(function(t){console.error(t)})},async update(){let e=this;this.loading=!0,c.get("/sanctum/csrf-cookie").then(t=>{c.post("/api/cryptocurrency/update",{id:this.$route.params.id,minRange:e.minRange,maxRange:e.maxRange,currentPrice:e.currentPrice}).then(a=>{a.status?(this.$vaToast.init({message:"Pool \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D",color:"success"}),console.log("Pool \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D"),e.loading=!1,this.percentMaxChange=(e.maxRange-e.currentPrice)/e.currentPrice*100,this.percentMinChange=(e.currentPrice-e.minRange)/e.currentPrice*100,e.chart.data[0].axisY.stripLines[0].set("value",e.minRange),e.chart.data[0].axisY.stripLines[0].set("label",e.percentMinChange),e.chart.data[0].axisY.stripLines[1].set("value",e.maxRange),e.chart.data[0].axisY.stripLines[1].set("label",e.percentMaxChange),e.chart.data[0].axisY.stripLines[2].set("value",e.currentPrice),e.chart.data[0].axisY.stripLines[2].set("label",e.currentPrice),this.chart.render()):(console.log("\u041D\u0435 \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442"),console.log(a.status))}).catch(function(a){console.log(t),console.error(a)})})}},mounted:function(){this.getData()}},M={class:"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 items-end"},Y=f(" \u041E\u0431\u043D\u043E\u0432\u0438\u0442\u044C "),L={class:"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 items-end"};function V(e,t,a,S,n,h){const o=r("VaInput"),d=r("va-button"),g=r("va-form"),u=r("VaBadge"),p=r("va-card-content"),x=r("va-card"),R=r("CanvasJSChart");return P(),_(b,null,[i(x,null,{default:l(()=>[i(p,null,{default:l(()=>[m("div",M,[i(g,{class:"flex flex-col gap-6",ref:"formRef"},{default:l(()=>[i(o,{modelValue:n.minRange,"onUpdate:modelValue":t[0]||(t[0]=s=>n.minRange=s),class:"mb-6",label:"Min Range",placeholder:"min"},null,8,["modelValue"]),i(o,{modelValue:n.maxRange,"onUpdate:modelValue":t[1]||(t[1]=s=>n.maxRange=s),class:"mb-6",label:"Max Range",placeholder:"max"},null,8,["modelValue"]),i(o,{modelValue:n.currentPrice,"onUpdate:modelValue":t[2]||(t[2]=s=>n.currentPrice=s),class:"mb-6",label:"Current Price",placeholder:"Current Price"},null,8,["modelValue"]),i(d,{onClick:t[3]||(t[3]=s=>h.update())},{default:l(()=>[Y]),_:1})]),_:1},512)]),m("div",L,[i(u,{text:n.percentMinChange,color:"danger",class:"mr-2"},null,8,["text"]),i(u,{text:n.percentMaxChange,color:"success",class:"mr-2"},null,8,["text"])])]),_:1})]),_:1}),i(R,{options:n.options,style:C(n.styleOptions),onChartRef:h.chartInstance},null,8,["options","style","onChartRef"])],64)}var w=v(y,[["render",V]]);export{w as default};
