import{_ as n,a as l,r as h,o as c,h as p,n as d}from"./index.822f6c57.js";const m={data(){return{chart:null,options:{animationEnabled:!0,theme:"dark1",exportEnabled:!0,title:{text:""},subtitles:[{text:"Weekly Average"}],axisX:{interval:90,intervalType:"minute",labelFontSize:10},axisY:{prefix:"\u0420",yValueFormatString:"####.####",title:"Price in RUB",stripLines:[]},toolTip:{content:"Date: {x}<br /><strong>Price:</strong><br />Open: {y[0]}, Close: {y[3]}<br />High: {y[1]}, Low: {y[2]}"},data:[{type:"candlestick",risingColor:"green",fallingColor:"red",xValueFormatString:"DD MMM YYYY HH mm",dataPoints:[]}]},styleOptions:{width:"100%",height:"560px"}}},methods:{chartInstance(a){this.chart=a,this.fetchRows()},fetchRows(){let a=this;this.loading=!0,l.request({method:"get",url:"/api/orders/chart-orders-15/"+this.$route.params.id,params:this.serverParams,paramsSerializer:e=>qs.stringify(e)}).then(e=>{e.data.candles.forEach(t=>{this.options.data[0].dataPoints.push({x:new Date(t.time),y:[t.open,t.high,t.low,t.close]})}),e.data.candles.forEach(t=>{this.options.data[0].dataPoints.push({x:new Date(t.time),y:[t.open,t.high,t.low,t.close]})}),e.data.list_stop_orders.forEach((t,r)=>{this.chart.data[0].axisY.addTo("stripLines",{value:t[1],label:t[0],color:"#FF0000"})}),e.data.list_take_profit.forEach((t,r)=>{this.chart.data[0].axisY.addTo("stripLines",{value:t[1],label:t[0],color:"#00FF00"})}),this.chart.title.set("text",e.data.symbol),this.chart.render(),a.loading=!1}).catch(e=>{console.log(e),a.loading=!1})}},created(){}};function u(a,e,t,r,s,o){const i=h("CanvasJSChart");return c(),p(i,{options:s.options,style:d(s.styleOptions),onChartRef:o.chartInstance},null,8,["options","style","onChartRef"])}var x=n(m,[["render",u]]);export{x as default};
